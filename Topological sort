https://practice.geeksforgeeks.org/problems/topological-sort/1

using dfs
class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        // add your code here
        int[] vis=new int[V];
        int[] res=new int[V];
        Stack<Integer> st=new Stack<>();
        Arrays.fill(vis,-1);
        for(int i=0;i<V;i++){
            if(vis[i]==-1){
                topoSortDfs(i,vis,adj,st);
            }
        }
        int i=0;
        while(!st.isEmpty()){
            res[i]=st.pop();
            i++;
        }
        return res;
    }
    public static void topoSortDfs(int node, int[] vis, ArrayList<ArrayList<Integer>> adj,Stack<Integer> st){
        vis[node]=1;
        for(Integer itr:adj.get(node)){
            if(vis[itr]==-1){
                topoSortDfs(itr,vis,adj,st);
            }
        }
        st.push(node);
        return;
    }
}
