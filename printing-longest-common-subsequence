https://www.geeksforgeeks.org/printing-longest-common-subsequence/


import java.io.*;
 
class LongestCommonSubsequence {
   public static void main(String args[]){
       String s1="ABDCFEAg";
       String s2="DABCfEgg";
       int n=s1.length();
       int m=s2.length();
       StringBuilder str = new StringBuilder();
     str=  LCS(s1,s2,n,m);
      System.out.println(str);
       
   }
   public static StringBuilder LCS(String s1, String s2, int n,int m){
       int[][] dp=new int[n+1][m+1];
       StringBuilder str = new StringBuilder();
       for(int i=0;i<n+1;i++){
           for(int j=0;j<m+1;j++){
               if(i==0 || j==0){
                   dp[i][j]=0;
               }
               else if(s1.charAt(i-1)==s2.charAt(j-1)){
                   dp[i][j]=1+dp[i-1][j-1];
               }else{
                   dp[i][j]=Math.max(dp[i-1][j], dp[i][j-1]);
               }
           }
       }
       int i=n;
       int j=m;
       while(i>0 && j>0){
           if(s1.charAt(i-1)==s2.charAt(j-1)){
               str.append(s1.charAt(i-1));
            //   str=str+s1.charAt(i-1);
               i--;
               j--;
           }else if(dp[i-1][j]> dp[i][j-1]){
               i--;
           }else{
               j--;
           }
       }
     //  System.out.println(str.reverse());
     return str.reverse();
       
   }
    
}
 
