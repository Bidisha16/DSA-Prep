https://practice.geeksforgeeks.org/problems/fractional-knapsack-1587115620/1

/*
class Item {
    int value, weight;
    Item(int x, int y){
        this.value = x;
        this.weight = y;
    }
}
*/

class Solution
{
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n) 
    {
        // Your code here
        Arrays.sort(arr,new Comparator<Item>(){
            public int compare(Item one, Item two){
                double first=(double)one.value/(double)one.weight;
                double second=(double)two.value/(double)two.weight;
                if(first>second){
                    return -1;
                }
                else if(first==second){
                    return 0;
                }
                return 1;                   
            }
        });
        double total=0;
        
        for(int i=0;i<n;i++){
            if(arr[i].weight<=W){
                total=total+(double)arr[i].value;
                W=W-arr[i].weight;
            }else{
                double ans=(double)arr[i].value/(double)arr[i].weight;
                total=total+ans*(double)W;
                return total;
            }
            
        }
        return total;
    }
}
