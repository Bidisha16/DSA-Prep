https://practice.geeksforgeeks.org/problems/detect-cycle-in-a-directed-graph/1

class Solution {
    // Function to detect cycle in a directed graph.
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {
        // code here
        int[] vis=new int[V];
        int[] visDfs=new int[V];
        Arrays.fill(vis,-1);
        Arrays.fill(visDfs,-1);
        for(int i=0;i<V;i++){
            if(vis[i]==-1){
                if(isCyclicDfs(i, vis, visDfs, adj)){
                    return true;
                }
            }
        }
        return false;
    }
    public boolean isCyclicDfs(int node, int[] vis, int[] visDfs, ArrayList<ArrayList<Integer>> adj){
        vis[node]=1;
        visDfs[node]=1;
        for(Integer itr:adj.get(node)){
            if(vis[itr]==-1){
                if(isCyclicDfs(itr, vis, visDfs, adj)){
                    return true;
                }
            }else if(vis[itr]==1 && visDfs[itr]==1){
                return true;
            }
        }
        visDfs[node]=0;
        return false;
    }
}
